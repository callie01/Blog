import { _ as _export_sfc, r as resolveComponent, o as openBlock, c as createElementBlock, a as createStaticVNode, b as createBaseVNode, d as createTextVNode, e as createVNode } from "./app-BeUS-Fv0.js";
const _sfc_main = {};
const _hoisted_1 = {
  href: "https://blog.csdn.net/qq_23073811/article/details/127004611",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_2 = {
  id: "_3-1-由文档-可知-el-table组件主要靠span-method方法实现合并",
  tabindex: "-1"
};
const _hoisted_3 = {
  class: "header-anchor",
  href: "#_3-1-由文档-可知-el-table组件主要靠span-method方法实现合并"
};
const _hoisted_4 = {
  href: "https://element.eleme.cn/#/zh-CN/component/table#table-column-scoped-slot",
  target: "_blank",
  rel: "noopener noreferrer"
};
function _sfc_render(_ctx, _cache) {
  const _component_ExternalLinkIcon = resolveComponent("ExternalLinkIcon");
  return openBlock(), createElementBlock("div", null, [
    _cache[6] || (_cache[6] = createStaticVNode('<h2 id="首先-遇到了复杂表格的需求不要慌-先来捋一下思路" tabindex="-1"><a class="header-anchor" href="#首先-遇到了复杂表格的需求不要慌-先来捋一下思路"><span>首先，遇到了复杂表格的需求不要慌，先来捋一下思路</span></a></h2><h2 id="_1-业务需求" tabindex="-1"><a class="header-anchor" href="#_1-业务需求"><span>1.业务需求：</span></a></h2><ol><li>合并相同数据的单元格（仅合并列）；</li><li><s>实现条件筛选功能</s>（意思是：内容不固定，需要$\\color{red}{动态合并}$）；</li><li><s>显示数字的列不合并，需要合并指定列</s>（意思就是：我想合并哪列就哪列 orz）；</li><li>数据相同但$\\color{red}{所属父级}$不一致的单元格不合并；</li><li>空值不合并;</li></ol>', 3)),
    createBaseVNode("p", null, [
      _cache[1] || (_cache[1] = createTextVNode("注：本文由此参考文档")),
      createBaseVNode("a", _hoisted_1, [
        _cache[0] || (_cache[0] = createTextVNode("el-table合并单元格")),
        createVNode(_component_ExternalLinkIcon)
      ]),
      _cache[2] || (_cache[2] = createTextVNode(" 基础上改进。"))
    ]),
    _cache[7] || (_cache[7] = createStaticVNode('<h2 id="_2-效果展示" tabindex="-1"><a class="header-anchor" href="#_2-效果展示"><span>2.效果展示：</span></a></h2><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a60278083e6f4246acb317cd90d0088f~tplv-k3u1fbpfcp-watermark.image" alt="image-files"></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/783df2df43d64a99a6f33a1a673f5591~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><h2 id="_3-实现思路" tabindex="-1"><a class="header-anchor" href="#_3-实现思路"><span>3. 实现思路：</span></a></h2>', 4)),
    createBaseVNode("h4", _hoisted_2, [
      createBaseVNode("a", _hoisted_3, [
        createBaseVNode("span", null, [
          _cache[4] || (_cache[4] = createTextVNode("3.1 由")),
          createBaseVNode("a", _hoisted_4, [
            _cache[3] || (_cache[3] = createTextVNode("文档")),
            createVNode(_component_ExternalLinkIcon)
          ]),
          _cache[5] || (_cache[5] = createTextVNode(" 可知：el-table组件主要靠span-method方法实现合并"))
        ])
      ])
    ]),
    _cache[8] || (_cache[8] = createStaticVNode('<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/405f146fa8b242ac8162cd9d257218f7~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><h3 id="_3-2-由以下可看出-返回所占单元格的值即可进行合并-那么找出所有单元格的占位即可" tabindex="-1"><a class="header-anchor" href="#_3-2-由以下可看出-返回所占单元格的值即可进行合并-那么找出所有单元格的占位即可"><span>3.2 由以下可看出，返回所占单元格的值即可进行合并，那么找出所有单元格的占位即可</span></a></h3><ul><li>return [rowIndex,columnIndex]</li><li>[5,1] 表示当前单元格占5行，1列</li><li>[0,0] 隐藏单元格</li><li>[1,1] 保持不变</li></ul><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c7c2f613cd91403d9d8aee88958bb7cc~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><p>例：生成以下右侧图示数据即可 <img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/33ad8a33d2cd433082769ebd7cc2e06a~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><h2 id="_4-先看一下表数据格式-test-vue-页面" tabindex="-1"><a class="header-anchor" href="#_4-先看一下表数据格式-test-vue-页面"><span>4.先看一下表数据格式 （test.vue 页面）</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">  <span class="token literal-property property">tableColumn</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">prop</span><span class="token operator">:</span> <span class="token string">&#39;School&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;学校&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">prop</span><span class="token operator">:</span> <span class="token string">&#39;Grade&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;年级&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">prop</span><span class="token operator">:</span> <span class="token string">&#39;Class&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;班级&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">prop</span><span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;姓名&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">prop</span><span class="token operator">:</span> <span class="token string">&#39;Chinese&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;中文&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">prop</span><span class="token operator">:</span> <span class="token string">&#39;Math&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;数学&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">prop</span><span class="token operator">:</span> <span class="token string">&#39;English&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;英文&#39;</span> <span class="token punctuation">}</span></span>\n<span class="line">      <span class="token punctuation">]</span><span class="token punctuation">,</span></span>\n<span class="line">      <span class="token literal-property property">tableData</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>\n<span class="line">        <span class="token punctuation">{</span></span>\n<span class="line">          <span class="token literal-property property">School</span><span class="token operator">:</span> <span class="token string">&#39;第一小学&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">Grade</span><span class="token operator">:</span> <span class="token string">&#39;1年级&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">Class</span><span class="token operator">:</span> <span class="token string">&#39;1班&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">Name</span><span class="token operator">:</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">Chinese</span><span class="token operator">:</span> <span class="token string">&#39;90&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">Math</span><span class="token operator">:</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">English</span><span class="token operator">:</span> <span class="token string">&#39;80&#39;</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">       <span class="token operator">...</span></span>\n<span class="line">      <span class="token punctuation">]</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-关键代码-抽成共用方法-table-js页面" tabindex="-1"><a class="header-anchor" href="#_5-关键代码-抽成共用方法-table-js页面"><span>5.关键代码，抽成共用方法（table.js页面）</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token doc-comment comment">/**</span>\n<span class="line"> * 分析每一列，找出所有【列】可合并（数据相同）的单元格</span>\n<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">tableData</span> 表数据</span>\n<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">tableColumn</span> 表字段/表头</span>\n<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">mergeCols</span> 指定合并哪些列（字段）</span>\n<span class="line"> * <span class="token keyword">@returns</span></span>\n<span class="line"> */</span></span>\n<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getMergeCells</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">tableData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> tableColumn <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> mergeCols <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token keyword">const</span> fields <span class="token operator">=</span> tableColumn<span class="token operator">?.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">.</span>prop<span class="token punctuation">)</span></span>\n<span class="line">  <span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>\n<span class="line">  </span>\n<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tableData<span class="token operator">?.</span>length <span class="token operator">||</span> <span class="token operator">!</span>tableColumn<span class="token operator">?.</span>length <span class="token operator">||</span> <span class="token operator">!</span>mergeCols<span class="token operator">?.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span></span>\n<span class="line"> </span>\n<span class="line">  <span class="token comment">// 倒叙遍历行（方便统计合并列单元格数至最上方，避免表格塌陷）</span></span>\n<span class="line">  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> row <span class="token operator">=</span> tableData<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> row <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> row<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    array<span class="token punctuation">[</span>row<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>\n<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> col <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> col <span class="token operator">&lt;</span> fields<span class="token punctuation">.</span>length<span class="token punctuation">;</span> col<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">       <span class="token comment">// 1.最后一行单元格不合并（初始无可对比数据）</span></span>\n<span class="line">       <span class="token comment">// 2.不在指定列（mergeCols）的单元格不合并</span></span>\n<span class="line">       <span class="token comment">// 3.空值不合并</span></span>\n<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>row <span class="token operator">===</span> tableData<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">||</span> <span class="token operator">!</span>mergeCols<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>fields<span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>tableData<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>fields<span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        array<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span></span>\n<span class="line">        <span class="token keyword">continue</span></span>\n<span class="line">      <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">      <span class="token comment">// 4.数据相同但所属父级不一致的单元格不合并</span></span>\n<span class="line">      <span class="token keyword">const</span> parentFields <span class="token operator">=</span> mergeCols<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> col<span class="token punctuation">)</span> <span class="token comment">// 在指定合并列中找出所有父级</span></span>\n<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>mergeCols<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>fields<span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> parentFields<span class="token operator">?.</span><span class="token function">includes</span><span class="token punctuation">(</span>fields<span class="token punctuation">[</span>col <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">const</span> currentParents <span class="token operator">=</span> parentFields<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">field</span> <span class="token operator">=&gt;</span> tableData<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>field<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 当前单元格所有父级</span></span>\n<span class="line">        <span class="token keyword">const</span> nextRowParents <span class="token operator">=</span> parentFields<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">field</span> <span class="token operator">=&gt;</span> tableData<span class="token punctuation">[</span>row <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>field<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 下一行单元格所有父级</span></span>\n<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>currentParents<span class="token operator">?.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!==</span> nextRowParents<span class="token operator">?.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">          array<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span></span>\n<span class="line">          <span class="token keyword">continue</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">      <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">      <span class="token comment">// 5.合并相同数据的单元格</span></span>\n<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>tableData<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>fields<span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">===</span> tableData<span class="token punctuation">[</span>row <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>fields<span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">const</span> beforeCell <span class="token operator">=</span> array<span class="token punctuation">[</span>row <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span></span>\n<span class="line">        array<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token operator">+</span> beforeCell<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span></span>\n<span class="line">        beforeCell<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span></span>\n<span class="line">        beforeCell<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span></span>\n<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>\n<span class="line">        array<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment">// 否则不合并</span></span>\n<span class="line">      <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token comment">// console.log(array, &#39;array&#39;)</span></span>\n<span class="line">  <span class="token keyword">return</span> array</span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="优点" tabindex="-1"><a class="header-anchor" href="#优点"><span>优点：</span></a></h4><ul><li>可动态指定需要合并的列</li><li>空值（null、undefined、空字符串、0）不会被合并</li><li>数据相同但所属父级不相同的不会被合并，并且不用手动指定父级</li></ul><h4 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点"><span>缺点：</span></a></h4><ul><li>不支持相邻的行合并</li></ul><h2 id="_6-完整代码-test-vue页面" tabindex="-1"><a class="header-anchor" href="#_6-完整代码-test-vue页面"><span>6.完整代码：（test.vue页面）</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span></span>\n<span class="line">  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;main&quot;</span><span class="token operator">&gt;</span></span>\n<span class="line">    <span class="token operator">&lt;</span>el<span class="token operator">-</span>table <span class="token operator">:</span>data<span class="token operator">=</span><span class="token string">&quot;tableData&quot;</span> <span class="token operator">:</span>span<span class="token operator">-</span>method<span class="token operator">=</span><span class="token string">&quot;objectSpanMethod&quot;</span> style<span class="token operator">=</span><span class="token string">&quot;width: 100%&quot;</span><span class="token operator">&gt;</span></span>\n<span class="line">      <span class="token operator">&lt;</span>el<span class="token operator">-</span>table<span class="token operator">-</span>column v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">&quot;item in tableColumn&quot;</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">&quot;item.prop&quot;</span> <span class="token operator">:</span>prop<span class="token operator">=</span><span class="token string">&quot;item.prop&quot;</span> <span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">&quot;item.label&quot;</span> min<span class="token operator">-</span>width<span class="token operator">=</span><span class="token string">&quot;180&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span></span>\n<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">&gt;</span></span>\n<span class="line">  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>\n<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></span>\n<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> getMergeCells <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/projects/onemap/utils/table.js&#39;</span></span>\n<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">mixins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token literal-property property">tableColumn</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">prop</span><span class="token operator">:</span> <span class="token string">&#39;School&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;学校&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">prop</span><span class="token operator">:</span> <span class="token string">&#39;Grade&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;年级&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">prop</span><span class="token operator">:</span> <span class="token string">&#39;Class&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;班级&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">prop</span><span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;姓名&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">prop</span><span class="token operator">:</span> <span class="token string">&#39;Chinese&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;中文&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">prop</span><span class="token operator">:</span> <span class="token string">&#39;Math&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;数学&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">prop</span><span class="token operator">:</span> <span class="token string">&#39;English&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;英文&#39;</span> <span class="token punctuation">}</span></span>\n<span class="line">      <span class="token punctuation">]</span><span class="token punctuation">,</span></span>\n<span class="line">      <span class="token literal-property property">tableData</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">School</span><span class="token operator">:</span> <span class="token string">&#39;第一小学&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Grade</span><span class="token operator">:</span> <span class="token string">&#39;1年级&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Class</span><span class="token operator">:</span> <span class="token string">&#39;1班&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Name</span><span class="token operator">:</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Chinese</span><span class="token operator">:</span> <span class="token string">&#39;90&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Math</span><span class="token operator">:</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">English</span><span class="token operator">:</span> <span class="token string">&#39;80&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">School</span><span class="token operator">:</span> <span class="token string">&#39;第一小学&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Grade</span><span class="token operator">:</span> <span class="token string">&#39;1年级&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Class</span><span class="token operator">:</span> <span class="token string">&#39;1班&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Name</span><span class="token operator">:</span> <span class="token string">&#39;张伟&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Chinese</span><span class="token operator">:</span> <span class="token string">&#39;90&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Math</span><span class="token operator">:</span> <span class="token string">&#39;99&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">English</span><span class="token operator">:</span> <span class="token string">&#39;89&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">School</span><span class="token operator">:</span> <span class="token string">&#39;第一小学&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Grade</span><span class="token operator">:</span> <span class="token string">&#39;1年级&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Class</span><span class="token operator">:</span> <span class="token string">&#39;2班&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Name</span><span class="token operator">:</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Chinese</span><span class="token operator">:</span> <span class="token string">&#39;90&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Math</span><span class="token operator">:</span> <span class="token string">&#39;85&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">English</span><span class="token operator">:</span> <span class="token string">&#39;80&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">School</span><span class="token operator">:</span> <span class="token string">&#39;第一小学&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Grade</span><span class="token operator">:</span> <span class="token string">&#39;1年级&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Class</span><span class="token operator">:</span> <span class="token string">&#39;3班&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Name</span><span class="token operator">:</span> <span class="token string">&#39;王五&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Chinese</span><span class="token operator">:</span> <span class="token string">&#39;79&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Math</span><span class="token operator">:</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">English</span><span class="token operator">:</span> <span class="token string">&#39;80&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">School</span><span class="token operator">:</span> <span class="token string">&#39;第一小学&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Grade</span><span class="token operator">:</span> <span class="token string">&#39;2年级&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Class</span><span class="token operator">:</span> <span class="token string">&#39;1班&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Name</span><span class="token operator">:</span> <span class="token string">&#39;赵六&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Chinese</span><span class="token operator">:</span> <span class="token string">&#39;95&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Math</span><span class="token operator">:</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">English</span><span class="token operator">:</span> <span class="token string">&#39;80&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">School</span><span class="token operator">:</span> <span class="token string">&#39;第一小学&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Grade</span><span class="token operator">:</span> <span class="token string">&#39;2年级&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Class</span><span class="token operator">:</span> <span class="token string">&#39;2班&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Name</span><span class="token operator">:</span> <span class="token string">&#39;钱八&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Chinese</span><span class="token operator">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Math</span><span class="token operator">:</span> <span class="token string">&#39;85&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">English</span><span class="token operator">:</span> <span class="token string">&#39;80&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">School</span><span class="token operator">:</span> <span class="token string">&#39;第一小学&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Grade</span><span class="token operator">:</span> <span class="token string">&#39;2年级&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Class</span><span class="token operator">:</span> <span class="token string">&#39;3班&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Name</span><span class="token operator">:</span> <span class="token string">&#39;陈九&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Chinese</span><span class="token operator">:</span> <span class="token string">&#39;79&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Math</span><span class="token operator">:</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">English</span><span class="token operator">:</span> <span class="token string">&#39;100&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">School</span><span class="token operator">:</span> <span class="token string">&#39;第一小学&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Grade</span><span class="token operator">:</span> <span class="token string">&#39;3年级&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Class</span><span class="token operator">:</span> <span class="token string">&#39;1班&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Name</span><span class="token operator">:</span> <span class="token string">&#39;黄十&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Chinese</span><span class="token operator">:</span> <span class="token string">&#39;91&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Math</span><span class="token operator">:</span> <span class="token string">&#39;88&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">English</span><span class="token operator">:</span> <span class="token string">&#39;80&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">School</span><span class="token operator">:</span> <span class="token string">&#39;第一小学&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Grade</span><span class="token operator">:</span> <span class="token string">&#39;3年级&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Class</span><span class="token operator">:</span> <span class="token string">&#39;2班&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Name</span><span class="token operator">:</span> <span class="token string">&#39;魏一&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Chinese</span><span class="token operator">:</span> <span class="token string">&#39;90&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Math</span><span class="token operator">:</span> <span class="token string">&#39;86&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">English</span><span class="token operator">:</span> <span class="token string">&#39;87&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">School</span><span class="token operator">:</span> <span class="token string">&#39;第一小学&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Grade</span><span class="token operator">:</span> <span class="token string">&#39;3年级&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Class</span><span class="token operator">:</span> <span class="token string">&#39;3班&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Name</span><span class="token operator">:</span> <span class="token string">&#39;杨二&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Chinese</span><span class="token operator">:</span> <span class="token string">&#39;79&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Math</span><span class="token operator">:</span> <span class="token string">&#39;99&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">English</span><span class="token operator">:</span> <span class="token string">&#39;80&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">School</span><span class="token operator">:</span> <span class="token string">&#39;第二小学&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Grade</span><span class="token operator">:</span> <span class="token string">&#39;3年级&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Class</span><span class="token operator">:</span> <span class="token string">&#39;3班&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Name</span><span class="token operator">:</span> <span class="token string">&#39;袁零&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Chinese</span><span class="token operator">:</span> <span class="token string">&#39;79&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">Math</span><span class="token operator">:</span> <span class="token string">&#39;99&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">English</span><span class="token operator">:</span> <span class="token string">&#39;80&#39;</span> <span class="token punctuation">}</span></span>\n<span class="line">      <span class="token punctuation">]</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token comment">// 获取所有单元格合并数据</span></span>\n<span class="line">    <span class="token function">spanArr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>tableColumn<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>\n<span class="line">      <span class="token keyword">const</span> mergeCols <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;School&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Grade&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Class&#39;</span><span class="token punctuation">]</span> <span class="token comment">// 需要合并的列（字段）</span></span>\n<span class="line">      <span class="token keyword">return</span> <span class="token function">getMergeCells</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>tableData<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tableColumn<span class="token punctuation">,</span> mergeCols<span class="token punctuation">)</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token function">destroyed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token comment">// 表数据合并</span></span>\n<span class="line">    <span class="token function">objectSpanMethod</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> row<span class="token punctuation">,</span> column<span class="token punctuation">,</span> rowIndex<span class="token punctuation">,</span> columnIndex <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>spanArr<span class="token punctuation">[</span>rowIndex<span class="token punctuation">]</span><span class="token punctuation">[</span>columnIndex<span class="token punctuation">]</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>\n<span class="line"><span class="token operator">&lt;</span>style lang<span class="token operator">=</span><span class="token string">&quot;scss&quot;</span> scoped<span class="token operator">&gt;</span></span>\n<span class="line"><span class="token punctuation">.</span>main <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>', 15))
  ]);
}
const cells_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "cells.html.vue"]]);
const data = JSON.parse('{"path":"/blogs/work/cells.html","title":"vue+elementUI 动态合并数据相同的单元格（可指定合并列）","lang":"en-US","frontmatter":{"title":"vue+elementUI 动态合并数据相同的单元格（可指定合并列）","date":"2023/07/12","tags":["vue","elementUI","框架"],"categories":["前端"]},"headers":[{"level":2,"title":"首先，遇到了复杂表格的需求不要慌，先来捋一下思路","slug":"首先-遇到了复杂表格的需求不要慌-先来捋一下思路","link":"#首先-遇到了复杂表格的需求不要慌-先来捋一下思路","children":[]},{"level":2,"title":"1.业务需求：","slug":"_1-业务需求","link":"#_1-业务需求","children":[]},{"level":2,"title":"2.效果展示：","slug":"_2-效果展示","link":"#_2-效果展示","children":[]},{"level":2,"title":"3. 实现思路：","slug":"_3-实现思路","link":"#_3-实现思路","children":[{"level":3,"title":"3.2 由以下可看出，返回所占单元格的值即可进行合并，那么找出所有单元格的占位即可","slug":"_3-2-由以下可看出-返回所占单元格的值即可进行合并-那么找出所有单元格的占位即可","link":"#_3-2-由以下可看出-返回所占单元格的值即可进行合并-那么找出所有单元格的占位即可","children":[]}]},{"level":2,"title":"4.先看一下表数据格式 （test.vue 页面）","slug":"_4-先看一下表数据格式-test-vue-页面","link":"#_4-先看一下表数据格式-test-vue-页面","children":[]},{"level":2,"title":"5.关键代码，抽成共用方法（table.js页面）","slug":"_5-关键代码-抽成共用方法-table-js页面","link":"#_5-关键代码-抽成共用方法-table-js页面","children":[]},{"level":2,"title":"6.完整代码：（test.vue页面）","slug":"_6-完整代码-test-vue页面","link":"#_6-完整代码-test-vue页面","children":[]}],"git":{"createdTime":1725984925000,"updatedTime":1726071554000,"contributors":[{"name":"callie","email":"callie99@163.com","commits":1},{"name":"callie01","email":"callie99@163.com","commits":1}]},"filePathRelative":"blogs/work/cells.md"}');
export {
  cells_html as comp,
  data
};
